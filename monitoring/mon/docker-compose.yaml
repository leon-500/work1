version: "3"

networks:
  mon:
  
volumes:
  grafana_storage:
  prometheus_storage:
  loki_storage:

services:
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki_storage:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - mon
    restart: always

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_storage:/prometheus
    #  - --web.console.libraries=/usr/share/prometheus/console_libraries
    #  - --web.console.templates=/usr/share/prometheus/consoles
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    ports:
      - 9090:9090
    networks:
      - mon
    restart: always
    
  grafana:
    image: grafana/grafana:latest
    #environment:
    #  - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    #  - GF_AUTH_ANONYMOUS_ENABLED=true
    #  - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin    
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        - name: Prometheus
          access: proxy
          type: prometheus
          url: http://prometheus:9090
          isDefault: true         
        EOF
        /run.sh
    ports:
      - "3000:3000"
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini    
    networks:
      - mon
    restart: always
    depends_on:
      - prometheus
      - loki
